(function(){"use strict";var t={};t.p="bundles/szrandomtest/",window?.__sw__?.assetPath&&(t.p=window.__sw__.assetPath+"/bundles/szrandomtest/"),function(){Shopware.Component.override("sw-product-detail",{template:'{% block sw_product_detail_content_tabs_reviews %}\n    {% parent %}\n    <sw-tabs-item :route="{ name: \'sw.product.detail.out-of-stock-notifications\', params: { id: $route.params.id } }" title="Out of stock notifications">\n        Out of stock notifications\n    </sw-tabs-item>\n{% endblock %}'});let{Criteria:t}=Shopware.Data;Shopware.Component.register("sw-product-detail-out-of-stock-notifications",{inject:["repositoryFactory"],template:'<sw-card title="Out of stock notifications">\n    {{ count }}\n</sw-card>\n\n<sw-data-grid :items="entities" :columns="columns">\n    {{ entities }}\n</sw-data-grid>',notificationRepository:void 0,data:function(){return{entities:void 0,columns:[{property:"email",label:"email"},{property:"created_at",label:"Created At"}],count:void 0}},computed:{notificationRepository(){return this.repositoryFactory.create("out_of_stock_product")}},created(){let o=this.$route.params.id,e=new t;e.addFilter(t.equals("productId",o)),this.notificationRepository.search(e,Shopware.Context.api).then(t=>{this.entities=t.entities,this.count=t.total})}}),Shopware.Module.register("sw-new-tab-out-of-stock-notifications",{routeMiddleware(t,o){let e="sw.product.detail.out-of-stock-notifications";"sw.product.detail"===o.name&&o.children.every(t=>t.name!==e)&&o.children.push({name:e,path:"/sw/product/detail/:id/out-of-stock-notifications",component:"sw-product-detail-out-of-stock-notifications",meta:{parentPath:"sw.product.index"}}),t(o)}})}()})();